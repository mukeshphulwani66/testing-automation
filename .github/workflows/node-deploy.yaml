name: Build and Push Docker Image
on:
  push:
    branches:
      - main
  workflow_dispatch:     

env:
  AWS_REGION: us-east-1
  IMAGE_NAME: test-demo-api-cicd

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/${{env.IMAGE_NAME}}
          tags: |
            latest
            v1.0.${{github.run_number}}
    #   - name: Display Docker image tags
    #     run: echo "Tags- ${{ steps.meta.outputs.tags }}"    
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ./API-jokes
          file: ./API-jokes/Dockerfile.prod
          tags: ${{ steps.meta.outputs.tags }}
      
  deploy-aws:
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}
      - name: log image deployed
        run: echo "Image deployed - ${{ env.IMAGE_NAME}}"  
    #   - name: Fill in the new image ID in the Amazon ECS task definition
    #     id: task-def
    #     uses: aws-actions/amazon-ecs-render-task-definition@v1
    #     with:
    #         # task-definition: task-definition.json
    #         # task-definition-arn:  task-definition-arn
    #         task-definition-family: task-definition-family-name 
    #         container-name: ${{ env.CONTAINER_NAME }}
    #         image: ${{ needs.build-image.outputs.imageid }} 
    #   - name: Deploy Amazon ECS task definition
    #     uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
    #     with:
    #       task-definition: ${{ steps.task-def.outputs.task-definition }}
    #       service: ${{ env.ECS_SERVICE }}
    #       cluster: ${{ env.ECS_CLUSTER }}
    #       wait-for-service-stability: true
             
       